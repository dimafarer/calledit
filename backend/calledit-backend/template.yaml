AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  calledit-backend
  Sample SAM Template for calledit-backend

Globals:
  Function:
    Timeout: 60
    Tracing: Active
    LoggingConfig:
      LogFormat: JSON 
  Api:
    TracingEnabled: true

Resources:
  CallitAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: CallitAPI
      StageName: Prod
      TracingEnabled: true
      Auth:
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !GetAtt CognitoUserPool.Arn     
      Cors:
        AllowMethods: '''GET,POST,OPTIONS'''
        AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
        AllowOrigin: '''*'''
        MaxAge: '''600'''
        AllowCredentials: '''true'''

  HelloWorldFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: handlers/hello_world/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api 
          Properties:
            Path: /hello
            Method: get
            RestApiId: !Ref CallitAPI
    Metadata:
      Debug: true             
 
  PromptBedrockFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "bedrock:InvokeModel"
                - "bedrock:ListFoundationModels"
              Resource: "*"
      CodeUri: handlers/prompt_bedrock/
      Handler: prompt_bedrock.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api 
          Properties:
            Path: /prompt_bedrock
            Method: get
            RestApiId: !Ref CallitAPI
    Metadata:
      Debug: true  


  PromptAgent:
    Type: AWS::Serverless::Function 
    Properties:
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "bedrock:InvokeModel"
                - "bedrock:InvokeModelWithResponseStream"
                - "bedrock:ListFoundationModels"
              Resource: "*"
      CodeUri: handlers/prompt_agent/
      Handler: agent.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api 
          Properties:
            Path: /prompt_agent
            Method: get
            RestApiId: !Ref CallitAPI
    Metadata:
      Debug: true   

  StrandsMakeCall:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: handlers/strands_make_call/
      Handler: strands_make_call.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "bedrock:InvokeModel"
                - "bedrock:InvokeModelWithResponseStream"
                - "bedrock:ListFoundationModels"
              Resource: "*"
      Events:
        MakeCall:
          Type: Api 
          Properties:
            Path: /strands-make-call
            Method: get
            RestApiId: !Ref CallitAPI

  MakeCall:
    Type: AWS::Serverless::Function 
    Properties:
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "bedrock:InvokeModel"
                - "bedrock:ListFoundationModels"
              Resource: "*"
      CodeUri: handlers/make_call/
      Handler: make_call.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api 
          Properties:
            Path: /make-call
            Method: get
            RestApiId: !Ref CallitAPI
    Metadata:
      Debug: true           

  LogCall:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: handlers/write_to_db/
      Handler: write_to_db.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: calledit-db
      Events:
        HelloWorld:
          Type: Api 
          Properties:
            Path: /log-call
            Method: post
            RestApiId: !Ref CallitAPI
            Auth:
              Authorizer: CognitoAuthorizer
              
  ListPredictions:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: handlers/list_predictions/
      Handler: list_predictions.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: calledit-db
      Events:
        HelloWorld:
          Type: Api 
          Properties:
            Path: /list-predictions
            Method: get
            RestApiId: !Ref CallitAPI
            Auth:
              Authorizer: CognitoAuthorizer

  AuthTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers/auth_token/
      Handler: auth_token.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Environment:
        Variables:
          USER_POOL_ID: !Ref CognitoUserPool
          CLIENT_ID: !Ref UserPoolClient
      Events:
        AuthToken:
          Type: Api
          Properties:
            Path: /auth/token
            Method: post
            RestApiId: !Ref CallitAPI


  # Add this to your existing Resources section
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${AWS::StackName}-user-pool
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      # Add email configuration
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      # Add verification message customization
      EmailVerificationMessage: "Your verification code is {####}"
      EmailVerificationSubject: "Your verification code"          

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: !Sub ${AWS::StackName}-client
      GenerateSecret: false
      # Add OAuth configuration
      CallbackURLs: 
        - http://localhost:5173/
        - https://d2k653cdpjxjdu.cloudfront.net/
      LogoutURLs:
        - http://localhost:5173/
        - https://d2k653cdpjxjdu.cloudfront.net/
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - email
        - openid
        - profile
      AllowedOAuthFlowsUserPoolClient: true
      SupportedIdentityProviders:
        - COGNITO
      # Enable authorization code grant flow
      ExplicitAuthFlows:
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_CUSTOM_AUTH
      PreventUserExistenceErrors: ENABLED


  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      UserPoolId: !Ref CognitoUserPool
      Domain: !Sub ${AWS::StackName}-${AWS::AccountId}-domain



Outputs:
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    # Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
    Value: !Sub "https://${CallitAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt HelloWorldFunctionRole.Arn

  # Add these to your existing Outputs section
  UserPoolId:
    Description: ID of the Cognito User Pool
    Value: !Ref CognitoUserPool
  UserPoolClientId:
    Description: ID of the Cognito User Pool Client
    Value: !Ref UserPoolClient
  UserPoolDomain:
    Description: Domain name of the Cognito User Pool
    Value: !Sub ${AWS::StackName}-${AWS::AccountId}-domain.auth.${AWS::Region}.amazoncognito.com    
  HostedUIURL:
    Description: Hosted UI URL for sign-in
    Value: !Sub https://${AWS::StackName}-${AWS::AccountId}-domain.auth.${AWS::Region}.amazoncognito.com/login?client_id=${UserPoolClient}&response_type=code&scope=email+openid+profile&redirect_uri=localhost:5173    

